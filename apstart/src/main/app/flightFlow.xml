<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="getAllAirlineFlightFlow">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
                <filter ref="FilterNotArrayList" doc:name="Filter If Not ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getUnitedFlightsFlow_Rest" doc:name="getUnitedFlightsFlow_Rest"/>
                <filter ref="FilterNotArrayList" doc:name="Filter If Not ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="findDeltaFlightFlowSOAP" doc:name="findDeltaFlightFlowSOAP"/>
                <filter ref="FilterNotArrayList" doc:name="Filter If Not ArrayList"/>
            </processor-chain>
        </scatter-gather>
    </flow>
    <flow name="getFlight">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP"/>
        <json:json-to-object-transformer returnClass="com.mulesoft.training.FlightRequest" doc:name="JSON to Object"/>
        <flow-ref name="getFlightsFlow" doc:name="getFlightsFlow"/>
    </flow>
   
    <flow name="getFlightFormFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
        <parse-template location="C:\Users\pbalwani\AnypointStudio\workspace\apstart\src\main\resources\input\FlightFinder.html" doc:name="Parse Template"/>
        <logger level="INFO" doc:name="Logger" />
    </flow>
    <flow name="getFlightsFlow">
        <set-variable variableName="destination" value="#[payload.destination]" doc:name="Set Destination"/>
        <logger level="INFO" doc:name="Logger" message="#[payload.destination]"/>
        <choice doc:name="Choice">
            <when expression="#[payload.airline == &quot;american&quot;]">
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
            </when>
            <when expression="#[payload.airline == &quot;delta&quot;]">
                <flow-ref name="findDeltaFlightFlowSOAP" doc:name="findDeltaFlightFlowSOAP"/>
            </when>
            <when expression="#[payload.airline == &quot;united&quot;]">
                <flow-ref name="getUnitedFlightsFlow_Rest" doc:name="getUnitedFlightsFlow_Rest"/>
            </when>
            <when expression="#[payload.airline == &quot;all&quot;]">
                <flow-ref name="getAllAirlineFlightFlow" doc:name="getAllAirlineFlightFlow"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <combine-collections-transformer doc:name="Combine Collections"/>
        <expression-filter expression="#[payload[0] is com.mulesoft.training.Flight]" doc:name="Fliter no results"/>
        <custom-transformer class="com.mulesoft.training.FlightSortTransformer" doc:name="Sort flight by price"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger level="INFO" doc:name="Logger"/>
        <exception-strategy ref="globalChoice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="getUnitedFlightsFlow_Rest">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/united" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination == empty &amp;&amp;  message.inboundProperties.'http.query.params'.code ==empty) ? 'SFO' : ( flowVars.destination != empty ?  flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="Set Destination"/>
        <http:request config-ref="United_REST_Request_Configuration" path="/{destination}" method="GET" doc:name="REST Request">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.destination]"/>
            </http:request-builder>
        </http:request>
        <expression-filter expression="#[payload.available() !=0]" doc:name="Filter no results"/>
        <json:json-to-object-transformer returnClass="com.mulesoft.training.FlightArray" doc:name="JSON to Object"/>
        <set-payload value="#[payload.flights]" doc:name="Set Payload to Flights"/>
        <logger level="INFO" doc:name="Logger"/>
        <exception-strategy ref="globalChoice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
 
    <flow name="getAmericanFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/american" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination == empty &amp;&amp;  message.inboundProperties.'http.query.params'.code ==empty) ? 'SFO' : ( flowVars.destination != empty ?  flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="Set Destination"/>
        <db:select config-ref="MySQL_Configuration" doc:name="American DB Request">
            <db:parameterized-query><![CDATA[select * from flights where toAirport = #[flowVars.destination]]]></db:parameterized-query>
        </db:select>
        <expression-filter expression="#[payload != [] ]" doc:name="Fliter no results"/>
        <data-mapper:transform config-ref="List_Map__To_Pojo" doc:name="List&lt;Map&gt; To Pojo"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <exception-strategy ref="globalChoice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
 
    <flow name="listAllDeltaFlightFlowSOAP">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/delta" allowedMethods="GET" doc:name="HTTP"/>
        <ws:consumer config-ref="Delta_SOAP_Web_Service_Consumer" operation="listAllFlights" doc:name="Delta SOAP Request"/>
        <mulexml:jaxb-xml-to-object-transformer returnClass="com.mulesoft.training.FlightArray" jaxbContext-ref="JAXB_Context" doc:name="XML to JAXB Object"/>
        <set-payload value="#[payload.flights]" doc:name="Collection of Flights"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
     <flow name="findDeltaFlightFlowSOAP">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/findDeltaFlight" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination == empty &amp;&amp;  message.inboundProperties.'http.query.params'.code ==empty) ? 'SFO' : ( flowVars.destination != empty ?  flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="Set Destination"/>
        <data-mapper:transform config-ref="String_To_Xml_findFlight_" input-ref="#[message.inboundProperties[&quot;http.method&quot;]]" doc:name="String To Xml&lt;findFlight&gt;">
            <data-mapper:input-arguments>
                <data-mapper:input-argument key="destination">#[flowVars.destination]</data-mapper:input-argument>
            </data-mapper:input-arguments>
        </data-mapper:transform>
        <ws:consumer config-ref="Delta_SOAP_Web_Service_Consumer" operation="findFlight" doc:name="Delta SOAP Request"/>
        <mulexml:jaxb-xml-to-object-transformer returnClass="com.mulesoft.training.FlightArray" jaxbContext-ref="JAXB_Context" doc:name="XML to JAXB Object"/>
        <expression-filter expression="#[payload.flights !=null]" doc:name="Fliter no results"/>
        <set-payload value="#[payload.flights]" doc:name="Collection of Flights"/>
        <custom-transformer class="com.mulesoft.training.FlightSortTransformer" doc:name="Sort Flights Based on Price"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
</mule>
